library(gdata)
url <- "http://lpi.worldbank.org/sites/default/files/International_LPI_from_2007_to_2016.xlsx"
lpi_raw <- read.xls(url)
lpi_raw
View(lpi_raw)
library(dplyr)
library(magrittr)
lpi_raw %>%
.[-1, ]
?select
lpi_raw %>%
.[-1, ] %>%
select(-contains("x."))
lpi <- lpi_raw %>%
.[-1, ] %>%
select(-contains("x.")) %>%
set_colnames(c("Country", "Overall LPI Score", "Overall LPI Rank",
"Customs", "Infrastructure", "International Shipments",
"Logistics Quality & Competence", "Tracking & Tracing",
"Timeliness"))
View(lpi)
?read.xls
lpi_raw <- read.xls(url, sheet = "2016")
lpi_raw <- read.xls(url, sheet = `2016`)
lpi_raw <- read.xls(url, sheet = 2016)
lpi_raw <- read.xls(url, sheet = 5)
lpi_raw_2007 <- read.xls(url, sheet = 4) %>% mutate(Year = 2007)
View(lpi_raw_2007)
lpi_raw_2007 <- read.xls(url, sheet = 4) %>% mutate(Year = 2007)
lpi_raw_2010 <- read.xls(url, sheet = 3) %>% mutate(Year = 2010)
lpi_raw_2012 <- read.xls(url, sheet = 2) %>% mutate(Year = 2012)
lpi_raw_2014 <- read.xls(url, sheet = 1) %>% mutate(Year = 2014)
lpi_raw_2016 <- read.xls(url, sheet = 5) %>% mutate(Year = 2016)
ls()
rm(url)
rm(lpi, lpi_raw)
lpi <- data.frame(NULL)
raw_files <- ls()
rm(lpi)
raw_files <- ls()
lpi <- data.frame(NULL)
for(i in ls()){
i <- i %>%
.[-1, ] %>%
select(-contains("x.")) %>%
set_colnames(c("Country", "Overall LPI Score", "Overall LPI Rank",
"Customs", "Infrastructure", "International Shipments",
"Logistics Quality & Competence", "Tracking & Tracing",
"Timeliness", "Year"))
lpi <- rbind(lpi, i)
}
for(i in raw_files){
i <- i %>%
.[-1, ] %>%
select(-contains("x.")) %>%
set_colnames(c("Country", "Overall LPI Score", "Overall LPI Rank",
"Customs", "Infrastructure", "International Shipments",
"Logistics Quality & Competence", "Tracking & Tracing",
"Timeliness", "Year"))
lpi <- rbind(lpi, i)
}
View(lpi_raw_2007)
for(i in raw_files) names(i)
sapply(ls(), get)
dfs <- ls()[sapply(mget(ls(), .GlobalEnv), is.data.frame)]
str(dfs)
sapply( dfs, function(x)  str( get( x ) ) )
mget(raw_files[1])
for(i in raw_files){
i <- mget(raw_files[i]) %>%
.[-1, ] %>%
select(-contains("x.")) %>%
set_colnames(c("Country", "Overall LPI Score", "Overall LPI Rank",
"Customs", "Infrastructure", "International Shipments",
"Logistics Quality & Competence", "Tracking & Tracing",
"Timeliness", "Year"))
lpi <- rbind(lpi, i)
}
for(i in raw_files) names(mget(i))
for(i in raw_files) names(mget(raw_files[i]))
names(lpi_raw_2007)
names(lpi_raw_2010)
rm(lpi_raw_2007)
for(i in raw_files){
i <- mget(raw_files[i]) %>%
.[-1, ] %>%
select(-contains("x.")) %>%
set_colnames(c("Country", "Overall LPI Score", "Overall LPI Rank",
"Customs", "Infrastructure", "International Shipments",
"Logistics Quality & Competence", "Tracking & Tracing",
"Timeliness", "Year"))
lpi <- rbind(lpi, i)
}
lpi <- data.frame(NULL)
for(i in raw_files){
i <- mget(raw_files[i]) %>%
.[-1, ] %>%
select(-contains("x.")) %>%
set_colnames(c("Country", "Overall LPI Score", "Overall LPI Rank",
"Customs", "Infrastructure", "International Shipments",
"Logistics Quality & Competence", "Tracking & Tracing",
"Timeliness", "Year"))
lpi <- rbind(lpi, i)
}
rm(lpi, raw_files, i, dfs)
raw_files <- list()
lpi <- data.frame(NULL)
for(i in raw_files){
i <- mget(raw_files[i]) %>%
.[-1, ] %>%
select(-contains("x.")) %>%
set_colnames(c("Country", "Overall LPI Score", "Overall LPI Rank",
"Customs", "Infrastructure", "International Shipments",
"Logistics Quality & Competence", "Tracking & Tracing",
"Timeliness", "Year"))
lpi <- rbind(lpi, i)
}
rm(lpi, i, raw_files)
raw_files <- ls()
lpi <- data.frame(NULL)
for(i in raw_files){
i <- mget(raw_files[i]) %>%
.[-1, ] %>%
select(-contains("x.")) %>%
set_colnames(c("Country", "Overall LPI Score", "Overall LPI Rank",
"Customs", "Infrastructure", "International Shipments",
"Logistics Quality & Competence", "Tracking & Tracing",
"Timeliness", "Year"))
lpi <- rbind(lpi, i)
}
mget(raw_files[i]) %>%
.[-1, ]
mget(raw_files[i])
get(i)
get(raw_files[i])
get(i) %>%
.[-1, ]
for(i in raw_files){
i <- get(i) %>%
.[-1, ] %>%
select(-contains("x.")) %>%
set_colnames(c("Country", "Overall LPI Score", "Overall LPI Rank",
"Customs", "Infrastructure", "International Shipments",
"Logistics Quality & Competence", "Tracking & Tracing",
"Timeliness", "Year"))
lpi <- rbind(lpi, i)
}
View(lpi)
rm(-lpi)
rm(c(raw_files))
rm(raw_files)
rm(raw_files, i, lpi_raw_2010, lpi_raw_2012, lpi_raw_2014, lpi_raw_2016)
?write.csv
write.csv(lpi, "data/lpi.csv", row.names = FALSE)
write.csv(lpi, "data/lpi.csv", row.names = FALSE)
shiny::runApp()
runApp()
runApp()
zipdata
runApp()
runApp()
library(readr)
read_csv("data/lpi")
read_csv("data/lpi.csv")
runApp()
runApp()
runApp()
data <- read_csv("data/lpi.csv")
names(data)
unique(as.character(data$Country)
)
runApp()
runApp()
unique(as.character(data$Country
)
)
runApp()
runApp()
runApp()
runApp()
str(data)
runApp()
runApp()
head(lpi)
runApp()
shinyApp(ui = ui, server = server)
read_csv("data/lpi.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(readr)
lpi <- read_csv("data/lpi.csv")
str(lpi)
unique(lpi$Year)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages(c("maps", "mapproj"))
runApp()
runApp()
library(DT)
datatable(lpi, options = list(paging = FALSE))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(lpi)
lpi <- read_csv("data/lpi.csv")
runApp()
runApp()
source("load-data.R")
rm(lpi)
source("load-data.R")
runApp()
runApp()
saveRDS(lpi, "data/lpi.rds")
runApp()
readRDS("data/counties.rds")
readRDS("data/lpi.rds")
lpi[, 2]
runApp()
runApp()
enc2native(lpi)
x <- readLines('data/lpi.csv', encoding = 'UTF-8')
x <- enc2native(x)
gsub(' ', '-', x, fixed = TRUE)
View(lpi)
guess_encoding(lpi$Country)
x
lpi$Country
str(lpi$Country)
rm(list = ls())
library(gdata)
library(dplyr)
library(magrittr)
# import LPI raw data
# excluded 2007 because of different variables tracked
url <- "http://lpi.worldbank.org/sites/default/files/International_LPI_from_2007_to_2016.xlsx"
lpi_raw_2010 <- read.xls(url, sheet = 3) %>% mutate(Year = 2010)
lpi_raw_2012 <- read.xls(url, sheet = 2) %>% mutate(Year = 2012)
lpi_raw_2014 <- read.xls(url, sheet = 1) %>% mutate(Year = 2014)
lpi_raw_2016 <- read.xls(url, sheet = 5) %>% mutate(Year = 2016)
rm(url)
# tidy and combine
raw_files <- ls()
lpi <- data.frame(NULL)
for(i in raw_files){
i <- get(i) %>%
.[-1, ] %>%
select(-contains("x.")) %>%
set_colnames(c("Country", "Overall LPI Score", "Overall LPI Rank",
"Customs", "Infrastructure", "International Shipments",
"Logistics Quality & Competence", "Tracking & Tracing",
"Timeliness", "Year"))
lpi <- rbind(lpi, i)
}
rm(raw_files, i, lpi_raw_2010, lpi_raw_2012, lpi_raw_2014, lpi_raw_2016)
lpi
View(lpi)
runApp()
lpi$Country == "C<f4>te d'Ivoire"
which(lpi$Country == "C<f4>te d'Ivoire")
which(lpi$Country %in% "d'Ivoire")
library(stringr)
str_locate(lpi$Country, "voire")
str_detect(lpi$Country, "voire")
str_detect(lpi$Country, "voire") %>% sum(.)
str_detect(lpi$Country, "voire") %>% which(.)
str_detect(lpi$Country, "Tom") %>% which(.)
lpi$Country[c(269, 394, 603)]
str_detect(lpi$Country, "voire") %>% which(.)
lpi$Country[109, 238, 389, 565]
lpi$Country[c(109, 238, 389, 565)]
lpi$Country[c(109, 238, 389, 565)] <- "Cote d Ivoire"
?read.xls
?read.csv()
url <- "http://lpi.worldbank.org/sites/default/files/International_LPI_from_2007_to_2016.xlsx"
lpi_raw_2010 <- read.xls(url, sheet = 3, stringsAsFactors = FALSE) %>% mutate(Year = 2010)
str(lpi_raw_2010)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
iris
runApp()
runApp()
?leaflet
install_github('ramnathv/rCharts@dev')
install_github('ramnathv/rMaps')
require(devtools)
install_github('ramnathv/rCharts@dev')
install_github('ramnathv/rMaps')
library(rMaps)
crosslet(
x = "country",
y = c("web_index", "universal_access", "impact_empowerment", "freedom_openness"),
data = web_index
)
?crosslet
library(rMaps)
?rMaps
help(package = "rMaps")
install.packages("googleVis")
library(googleVis)
G <- gvisGeoChart(Exports, "Country", "Profit",
options=list(width=300, height=300))
T <- gvisTable(Exports,
options=list(width=220, height=300))
GT <- gvisMerge(G,T, horizontal=TRUE)
plot(GT)
Exports
Geo=gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
data.poly <- as.data.frame(polygons)
data.poly <- data.poly[,c(5,12)]
names(data.poly) <- c("Country Name","CO2 emissions (metric tons per capita)")
Leaflet(data = lpi)
Leaflet()
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12)
m %>% addTiles()
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12)
library(leaflet)
leaflet()
m <- leaflet() %>% setView(lng = -71.0589, lat = 42.3601, zoom = 12)
m %>% addTiles()
leaflet() %>%
setView(lng = -71.0589, lat = 42.3601, zoom = 0)
leaflet() %>%
setView(lng = -71.0589, lat = 42.3601, zoom = 1)
leaflet() %>%
setView(lng = -71.0589, lat = 42.3601, zoom = 1)  %>%
addTiles()
Geo=gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
Exports
lpi
View(lpi)
G <- gvisGeoChart(Exports, "Country", "Profit",
options=list(width=300, height=300))
T <- gvisTable(Exports,
options=list(width=220, height=300))
GT <- gvisMerge(G,T, horizontal=TRUE)
plot(GT)
Geo=gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"))
plot(Geo)
Geo=gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"),
width=600, height=400))
plot(Geo)
Geo=gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"),
width=1000, height=1000))
plot(Geo)
Geo=gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"),
width=5000, height=1000))
plot(Geo)
View(lpi)
names(lpi)
Geo=gvisGeoChart(lpi, locationvar="Country",
colorvar="Overall LPI Score",
options=list(projection="kavrayskiy-vii"),
width=5000, height=1000))
plot(Geo)
?gvisGeoChart
Geo <- gvisGeoChart(lpi, locationvar="Country",
colorvar="Overall LPI Score",
options=list(projection="kavrayskiy-vii",
width="500px", height="300px"),
)
lpi$Country[603]
lpi$Country[c(109, 238, 389, 565)] <- "Cote d Ivoire"
rm(lpi)
lpi <- readRDS("data/lpi.rds")
lpi$Country[c(109, 238, 389, 565)] <- "Cote d Ivoire"
lpi$Country[c(269, 394, 603)] <- "Sco Tomi and Principe"
Geo <- gvisGeoChart(lpi, locationvar="Country",
colorvar="Overall LPI Score",
options=list(projection="kavrayskiy-vii",
width="500px", height="300px"),
)
plot(Geo)
Geo <- gvisGeoChart(lpi, locationvar="Country",
colorvar="Overall LPI Score",
options=list(projection="kavrayskiy-vii",
width="1000px", height="500px"),
)
plot(Geo)
runApp()
Geo <- gvisGeoChart(lpi, locationvar="Country",
colorvar="Overall LPI Score",
options=list(width="1000px", height="500px"),
)
plot(Geo)
runApp()
