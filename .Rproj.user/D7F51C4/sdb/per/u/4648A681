{
    "collab_server" : "",
    "contents" : "############\n# server.R #\n############\nlibrary(shiny)\nlibrary(plotly)\nlibrary(readr)\n\n\nshinyServer(function(input, output) {\n        \n        output$text1 <- renderText({ \n                \"You have selected this\"\n        })\n        \n        output$map <- renderPlotly({ \n                \n                l <- list(color = toRGB(\"grey\"), width = 0.5)\n                \n                # specify map projection/options\n                g <- list(\n                        showframe = FALSE,\n                        showcoastlines = FALSE,\n                        projection = list(type = 'Mercator')\n                )\n                \n                plot_ly(lpi, z = `Overall LPI Score`, text = Country, locations = Code, type = 'choropleth',\n                        color = `Overall LPI Score`, colors = 'Blues', marker = list(line = l),\n                        colorbar = list(title = 'LPI Score')) %>%\n                        layout(title = 'Global Logistics Performance Index',\n                               geo = g)\n        })\n        \n})\n\n########\n# ui.R #\n########\nlibrary(shiny)\nlibrary(plotly)\nlibrary(DT)\n\nshinyUI(navbarPage(\n        title = 'International Logistics Performance Index',\n        \n        tabPanel('Global Ranking',\n                 sidebarLayout(\n                         sidebarPanel(\n                                 helpText(\"Modify the map and data table by selecting desired information below.\"),\n                                 \n                                 selectInput(\"var\", label = \"Choose a metric to display\",\n                                             choices = list(\"Overall LPI Score\", \"Customs\", \"Infrastructure\", \"International Shipments\", \"Logistics Quality & Competence\", \"Tracking & Tracing\", \"Timeliness\"),\n                                             selected = \"Overall LPI Score\"),\n                                 \n                                 sliderInput(\"range\", \"Year:\",\n                                             min = 2010, max = 2016, value = 2010, step = 2,\n                                             format=\"####\", sep=\"\", animate=TRUE)\n                         ),\n                         mainPanel(\n                                 plotlyOutput(\"map\")\n                         )\n                 )),\n        \n        tabPanel('Country Score Card'),\n        \n        tabPanel('Background', \n                 includeHTML(\"include.html\")\n        )\n))",
    "created" : 1469562898707.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "1206872391",
    "id" : "4648A681",
    "lastKnownWriteTime" : 6,
    "last_content_update" : 1469562947930,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}